<launch> 

    <!-- Parameters Used -->
    <!-- name is any custom name -->
    <!-- pkg is the name of the ROS Package -->
    <!-- type is the name of the node(executable) defined prior -->
    <!-- output = screen displays the output on the terminal Default is ROS_LOG -->
    <!-- launch-prefix gives instructions as to how to launch the node -->

    <!-- Esmacat ethernet addapter address (STOUT) -->
    <!-- <param name="ethercat_adapter_name" type="str" value="enp4s0f1" /> -->
    
    <!-- LOGGING -->
    <arg name="log_internals" default="false"/>
    <arg name="log_frames" default="false"/>
    <arg name="log_latencies" default="false"/>
  
    <!-- CONNECTION -->
    <arg name="serverIP" default="10.34.5.192"/>
    <arg name="clientIP" default="10.34.5.184"/>
    <!-- <arg name="serverType" default="multicast"/> -->
    <arg name="serverType" default="unicast"/>
    <!-- <arg name="multicastAddress" default="239.255.42.99"/> -->
    <arg name="multicastAddress" default="224.0.0.1"/>
    <arg name="serverCommandPort" default="1510"/>
    <arg name="serverDataPort" default="1511"/>
  
    <!-- PUBLISHING -->
    <!-- To publish the frame of rigid body -->
    <arg name="pub_rigid_body" default="true"/> 
    <!-- To publish the individual (unlabeled) markers along with the (labeled) markers of the rigid bodies -->
    <!-- keep pub_rigid_body to true to publish the markers of the rigidbody -->
    <arg name="pub_rigid_body_marker" default="true"/>  
    <!-- To publish markers as rigidbodies and track them, make the required changes in the config/initiate.yaml -->
    <arg name="pub_individual_marker" default="false"/>
    <!-- To publish all the unlabeled markers as point cloud -->
    <arg name="pub_pointcloud" default="false"/>
  
    <!-- CONFIG FILE -->
    <arg name="conf_file" default="initiate.yaml"/>
  
    <node pkg="natnet_ros_cpp" type="natnet_ros_cpp" name="natnet_ros" output="screen" >    
      <!-- CONFIG-FILE -->
      <rosparam file="$(find natnet_ros_cpp)/config/$(arg conf_file)"/>   
    
      <!-- LOGGING -->
      <param name="log_internals" value="$(arg log_internals)" type="bool"/>
      <param name="log_frames" value="$(arg log_frames)" type="bool"/>
      <param name="log_latencies" value="$(arg log_latencies)" type="bool"/>
  
      <!-- CONNECTION -->
      <param name="serverIP" value="$(arg serverIP)" type="str"/>
      <param name="clientIP" value="$(arg clientIP)" type="str"/>
      <param name="serverType" value="$(arg serverType)" type="str"/>
      <param name="multicastAddress" value="$(arg multicastAddress)" type="str"/>
      <param name="serverCommandPort" value="$(arg serverCommandPort)" type="int"/>
      <param name="serverDataPort" value="$(arg serverDataPort)" type="int"/>
  
      <!-- PUBLISHING -->
      <param name="pub_rigid_body" value="$(arg pub_rigid_body)" type="bool"/>
      <param name="pub_rigid_body_marker" value="$(arg pub_rigid_body_marker)" type="bool"/>
      <param name="pub_individual_marker" value="$(arg pub_individual_marker)" type="bool"/>
      <param name="pub_pointcloud" value="$(arg pub_pointcloud)" type="bool"/>
    </node>

    <!-- Esmacat ethernet addapter address (GINGER_BEER) -->
    <param name="ethercat_adapter_name" type="str" value="enp7s0" /> 
    
    <!-- Esmacat parameter -->
    <param name="sync_ease_slave_index" type="int" value="0" />
    <param name="maze_ard0_ease_slave_index" type="int" value="1" />

    <!-- Esmacat Node -->
    <node name = "Esmacat_application_node" pkg = "omniroute_esmacat_ros" type = "ros_esmacat_node" output = "screen" launch-prefix="ethercat_grant"/>

    <!-- Omniroute three_by_three_interface interface -->
    <node name = "three_by_three_interface_node" pkg = "omniroute_operation" type = "three_by_three_interface" output = "screen"/>

    <!-- Omniroute experiment controller interface -->
    <node name = "experiment_controller" pkg = "omniroute_operation" type = "experiment_controller" output = "screen"/>
     
    <!-- Omniroute experiment controller interface -->
    <node name = "maze_tf_broadcaster" pkg = "omniroute_operation" type = "maze_tf_broadcaster.py" output = "screen"/>
<!--  -->
    <!-- <machine name="nc4-whiskey" address="10.34.5.192" user="nc4" default="true"/> -->
<!--  -->
    <!-- <node pkg="projection_operation" type="sound_generator" name="sound_generator" machine="nc4-whiskey"/> -->
    <!--  -->
    <!-- <node pkg="projection_operation" type="projection_calibration_node" name="projection_calibration_node" machine="nc4-whiskey"/> -->
    
    <!-- Omniroute feeder cantry node -->
    <node name = "gantry_operation_node" pkg = "omniroute_operation" type = "gantry_operation.py" output = "screen"/>
    
  </launch>